.program jammadb9
.side_set 2 optional
    set y,7;
reset:
    set x,23 side 2;
    nop side 3 [3];
bitloop:
    in pins,1 side 1;
    jmp x-- bitloop side 3;
    push;
    jmp y-- reset;
    irq wait 0;

% c-sdk {


// 12 instructions
// now 10 instructions
static inline void jammadb9_program_init(PIO pio, uint sm, uint offset, uint load_pin, uint data_pin) {
  pio_sm_config sm_config = jammadb9_program_get_default_config(offset);

  sm_config_set_sideset_pins(&sm_config, load_pin);
  sm_config_set_set_pins(&sm_config, load_pin, 2);

  sm_config_set_in_pins(&sm_config, data_pin);
  sm_config_set_clkdiv(&sm_config, 125);
  // set 1 it appears as FFF - no buttons
  // set 4 it appears as FF9, A,START
  sm_config_set_in_shift(&sm_config,
    /* shift_right */ true,
    /* autopush */ false, 
    24);

  sm_config_set_fifo_join(&sm_config, PIO_FIFO_JOIN_RX);

  pio_gpio_init(pio, load_pin);
  pio_gpio_init(pio, load_pin+1);
  pio_sm_set_consecutive_pindirs(pio, sm, load_pin, 2, true);
  pio_gpio_init(pio, data_pin);
  pio_sm_set_consecutive_pindirs(pio, sm, data_pin, 1, false);

  pio_sm_init(pio, sm, offset, &sm_config);
  pio_sm_set_enabled(pio, sm, true);
}

%}
